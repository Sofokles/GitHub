package Lecture5;
import java.io.File;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;

import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

public class ReadXML {
public static void main(String[] args) {

	try {
		File XmlFile = new File("opencim3sub.xml");
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
		Document doc = dBuilder.parse(XmlFile);
		// normalize CIM XML file
		doc.getDocumentElement().normalize();//gör så att vi kan finna errors..? ( which returns root element of the file and then normalize your XML
		//object.)
		NodeList subList = doc.getElementsByTagName("cim:Substation"); //lista med substations, är detta då en lista med objekt..?
		// … read other required CIM objects
		NodeList voltList = doc.getElementsByTagName("cim:VoltageLevel");
		NodeList genList = doc.getElementsByTagName("cim:SynchronousMachine");
		// … cycle through each list to extract required dat
		int t1 = subList.getLength();
		int t2 = voltList.getLength();
		int t3 = genList.getLength();
		System.out.println("Print:" + t1 + t2 + t3);
		for (int i = 0; i < subList.getLength(); i++) {
			// … use extractNode method
			Node theNode = subList.item(i);			
			extractNode (theNode);
			}
		for (int i = 0; i < voltList.getLength(); i++) {
			// … use extractNode method
			Node theNode = voltList.item(i);			
			extractNode (theNode);
			}
		for (int i = 0; i < genList.getLength(); i++) {
			// … use extractNode method
			Node theNode = genList.item(i);			
			extractNode (theNode);
			}
		}
	catch(Exception e){
		e.printStackTrace();
	}
}
public static void extractNode (Node node){
// … remember to convert node to element in order to search for the data inside it.
	Element element = (Element) node;
	
	element.getElementsByTagName("cim:IdentifiedObject.name");//.item(0).getTextContent;
	
	//System.out.println(element.getElementsByTagName("cim:IdentifiedObject.name"));
	System.out.println(element.getAttribute("rdf:ID"));
	System.out.println(element.getElementsByTagName("cim:IdentifiedObject.name").item(0).getTextContent());
	//can be used to read specific attribute of XML node.
}
}